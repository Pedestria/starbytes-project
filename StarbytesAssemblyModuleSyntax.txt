// lang: starbytes

decl var = 4
print(var)

class Someclass {
    new(hello:String)
    otherMethod(){
        print(instance.hello)
    }
}

decl S = new Someclass("Message")
S.otherMethod()

// lang : starbytes-asm-Dissasseblemed



crtvr ("var")
stvr("var",crtinst("SBNumber",{v = 4}))
clfnc(rfgl("print"),{str = rfvr("var")})
crtcls("Someclass",[
    crtcls_prty("hello",0,0)
],[
    rfcls_prty("hello")
],[
    crtcls_fnc("otherMethod",[],{
        clfnc("print",{str = rfcls_prty("hello")})
    })
])
crtvr("S")
stvr("S",crtinst("Someclass",{hello = "Message"}))
clfnc(rfvr("S")*rfvr("otherMethod"),{})


store a = crt_fnc_args("x","y")
crt_fnc("Foo",a,{
    return(ivk_inst_metd(refer_var("x"),"add",{refer_var("y")}))
})
ivk_fnc("Foo",{&crt_stb_num(1),&crt_stb_num(2)})




clfnc = Call Function (// Reference to function variable,// Parameters)
crtcls = Create Class (// Name,//Properties,//Methods)
crtvr = Create Variable (// Name,//Immutable ?,//Loose ?)
stvr = Set Variable (// Variable to refer,// Class instance to set)
crtcls_prty = Create Class Property(// Name,//Immutable ?,//Loose ?)
rfcls_prty = Reference Class Property(// Name)
rfvr = Reference Variable (//Name)
crt_stb_num = Create Starbytes Number (//Type,//Val)
crt_stb_str = Create Starbytes String (//Val)
crt_stb_bool = Create Starbytes Boolean (//Val)


crtvr = 01
stvr = 02
clfnc = 03
crtcls = 04
crtcls_prty = 05
rfvr = 06

11 = crt_stb_str
12 = crt_stb_num

11 Hello
100 = PROG_END

end = End Program
end = 00

// lang : starbytes-asm

01 Var 00 02 Var 11 TestString 00 00 03 Log 06 Var 00 00

Dissassembled:

crtvr Var end
stvr Var crt_stb_string TestString end end
clfnc Log rfvr Var end end 


